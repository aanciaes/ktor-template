apply plugin: 'kotlinx-serialization'
apply plugin: 'maven-publish'
apply plugin: 'signing'

dependencies {
    api deps.ktor.serialization
    api deps.ktor.auth

    api deps.valiktor

    api deps.logs.logback
    api deps.logs.logbackJson
    api deps.logs.coroutinesSlf4j
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId "ktor-template-core"
            version project.version

            pom {
                name = 'Waterdog Ktor service template'
                description = 'Provides a basic template for a ktor based service that exposes a REST API'
                url = 'https://github.com/waterdog-oss/ktor-template'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/waterdog-oss/ktor-template'
                    }
                }
                developers {
                    developer {
                        id = "bruno.felix"
                        name = "Bruno Felix"
                        email = "bruno.felix@waterdog.mobi"
                    }
                    developer {
                        id = "goncalo.ferreira"
                        name = "Gon√ßalo Ferreira"
                        email = "goncalo@waterdog.mobi"
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/aterdog-oss/ktor-template.git'
                    developerConnection = 'scm:git:git://github.com:waterdog-oss/ktor-template.git'
                    url = 'https://github.com/waterdog-oss/ktor-template'
                }
            }

            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            from components.java
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
}
