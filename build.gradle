group 'mobi.waterdog'
version '0.0.1'

buildscript {
    apply from: "$rootDir/dependencies.gradle"

    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url = "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath deps.plugins.kotlin
        classpath deps.plugins.koin
        classpath deps.plugins.shadow
        classpath deps.plugins.ktlint
        classpath deps.plugins.serialization
        classpath deps.plugins.bintray
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'koin'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

apply from: "$rootDir/dependencies.gradle"

repositories {
    mavenCentral()
    jcenter()
}

test {
    useJUnitPlatform()
}


// Required so that Kotlin generates java 11 bytecode
compileKotlin.kotlinOptions.jvmTarget = JavaVersion.VERSION_11
compileTestKotlin.kotlinOptions.jvmTarget = JavaVersion.VERSION_11

sourceSets {
    main {
        kotlin.srcDir "src/main/kotlin"
        resources.srcDir "src/main/resources"
    }
    test {
        kotlin.srcDir "src/test/kotlin"
        resources.srcDir "src/test/resources"
    }
}

dependencies {
    api deps.kotlin.jdk

    api deps.logs.logback
    api deps.logs.logbackJson
    api deps.logs.coroutinesSlf4j

    api deps.ktor.serverNetty
    api deps.ktor.serialization
    api deps.ktor.auth

    api deps.koin.core
    api deps.koin.coreExt
    api deps.koin.ktor

    api deps.valiktor

    // Database
    api deps.exposed.core
    api deps.exposed.dao
    api deps.exposed.jdbc

    // Tests
    testImplementation deps.ktor.test
    testImplementation deps.koin.test
    testImplementation deps.junit.api
    testImplementation deps.junit.params
    testRuntimeOnly deps.junit.engine
    testImplementation deps.kluent
}

test {
    forkEvery = 1
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

applicationDefaultJvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,address=5005,suspend=n"]
mainClassName = "io.ktor.server.netty.DevelopmentEngine"

// Artifact publication configuration
publishing {
    publications {
        ArtifactPublication(MavenPublication) {
            from components.java
            groupId project.group
            artifactId "ktor-template-core"
            version project.version
        }
    }
}

bintray {
    user = project.properties["bintrayUser"]?.toString() ?: System.getenv("BINTRAY_USER")
    key = project.properties["bintrayApiKey"]?.toString() ?: System.getenv("BINTRAY_API_KEY")
    publications = ["ArtifactPublication"]
    publish = true
    pkg {
        repo = "ktor-template"
        name = "ktor-template-core"
        licenses = ["MIT"]
        vcsUrl = "https://github.com/waterdog-oss/ktor-template"
        userOrg = "waterdog"
        version {
            name = project.version
            released = new Date()
        }
    }
}
